{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanbudak/React_Projects/internet-store/src/pages/Home/HomeListCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from \"react-jss\";\nimport styles from './HomeListCardsStyles';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as modalActions from \"../../store/actions/ModalActions\";\nimport Card from \"../../components/Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomeListCards = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const homeList = useSelector(state => state.homeListReducer.homeList);\n  const isOpenModal = useSelector(state => state.modalReducer);\n  const dispatch = useDispatch();\n\n  const handleToggleModal = () => {\n    dispatch(modalActions.showModal());\n    return isOpenModal;\n  };\n\n  const itemObj = homeList.map((item, i) => /*#__PURE__*/_jsxDEV(Card, {\n    data: item,\n    toggleModal: handleToggleModal\n  }, i + item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 48\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.listCards,\n    children: itemObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomeListCards, \"UTZrqZN++qvbA0tCyYa9idyzsfo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = HomeListCards;\nHomeListCards.propTypes = {\n  homeList: PropTypes.object,\n  isOpenModal: PropTypes.bool\n};\nexport default injectSheet(styles)(HomeListCards);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeListCards\");","map":{"version":3,"sources":["/Users/bohdanbudak/React_Projects/internet-store/src/pages/Home/HomeListCards.js"],"names":["React","PropTypes","injectSheet","styles","useSelector","useDispatch","modalActions","Card","HomeListCards","props","classes","homeList","state","homeListReducer","isOpenModal","modalReducer","dispatch","handleToggleModal","showModal","itemObj","map","item","i","listCards","propTypes","object","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,YAAZ,MAA8B,kCAA9B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AAEA,QAAME,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,eAAN,CAAsBF,QAAhC,CAA5B;AACA,QAAMG,WAAW,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,YAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAACV,YAAY,CAACY,SAAb,EAAD,CAAR;AACA,WAAOJ,WAAP;AACH,GAHD;;AAKA,QAAMK,OAAO,GAAGR,QAAQ,CAACS,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,kBAAc,QAAC,IAAD;AAAmB,IAAA,IAAI,EAAED,IAAzB;AAA+B,IAAA,WAAW,EAAEJ;AAA5C,KAAWK,CAAC,GAACD,IAAb;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAhB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACa,SAAxB;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBD;;GAAMX,a;UAIeJ,W,EACGA,W,EACHC,W;;;KANfG,a;AAsBNA,aAAa,CAACgB,SAAd,GAA0B;AACtBb,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,MADE;AAEtBX,EAAAA,WAAW,EAAEb,SAAS,CAACyB;AAFD,CAA1B;AAKA,eAAexB,WAAW,CAACC,MAAD,CAAX,CAAoBK,aAApB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from \"react-jss\";\nimport styles from './HomeListCardsStyles';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport * as modalActions from \"../../store/actions/ModalActions\";\nimport Card from \"../../components/Card/Card\";\n\nconst HomeListCards = (props) => {\n\n    const {classes} = props;\n\n    const homeList = useSelector(state => state.homeListReducer.homeList);\n    const isOpenModal = useSelector(state => state.modalReducer);\n    const dispatch = useDispatch();\n\n    const handleToggleModal = () => {\n        dispatch(modalActions.showModal());\n        return isOpenModal;\n    };\n\n    const itemObj = homeList.map((item, i) => (<Card key={i+item} data={item} toggleModal={handleToggleModal}/>));\n\n    return (\n        <div className={classes.listCards}>\n            {itemObj}\n        </div>\n    );\n}\n\nHomeListCards.propTypes = {\n    homeList: PropTypes.object,\n    isOpenModal: PropTypes.bool\n};\n\nexport default injectSheet(styles)(HomeListCards);"]},"metadata":{},"sourceType":"module"}