{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bohdanbudak/React_Projects/internet-store/src/components/Button/Button.js\";\nimport React from 'react';\nimport injectSheet from \"react-jss\";\nimport styles from \"./ButtonStyles\";\nimport PropTypes from \"prop-types\";\n\nconst Button = props => {\n  const findAdditionalClass = () => {\n    const {\n      classes,\n      additionClass\n    } = props;\n\n    for (let prop in classes) {\n      if (prop === additionClass) {\n        return classes[prop];\n      }\n    }\n\n    return false;\n  };\n\n  const {\n    text,\n    width,\n    height,\n    fontSize,\n    onClick,\n    classes\n  } = props;\n  const addClass = findAdditionalClass();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${classes.btn} ${addClass}`,\n    style: {\n      width: width + 'px',\n      height: height + 'px',\n      fontSize: fontSize + 'px'\n    },\n    type: \"button\",\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nButton.propTypes = {\n  additionClass: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  classes: PropTypes.object,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onClick: PropTypes.func.isRequired\n};\nexport default injectSheet(styles)(Button);\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/bohdanbudak/React_Projects/internet-store/src/components/Button/Button.js"],"names":["React","injectSheet","styles","PropTypes","Button","props","findAdditionalClass","classes","additionClass","prop","text","width","height","fontSize","onClick","addClass","btn","propTypes","string","oneOfType","number","object","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAA2BH,KAAjC;;AACA,SAAK,IAAII,IAAT,IAAiBF,OAAjB,EAA0B;AACtB,UAAIE,IAAI,KAAKD,aAAb,EAA4B;AACxB,eAAOD,OAAO,CAACE,IAAD,CAAd;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GARD;;AASA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,OAAhC;AAAyCP,IAAAA;AAAzC,MAAoDF,KAA1D;AACA,QAAMU,QAAQ,GAAGT,mBAAmB,EAApC;AAEA,sBACI;AACI,IAAA,SAAS,EAAG,GAAEC,OAAO,CAACS,GAAI,IAAGD,QAAS,EAD1C;AAEI,IAAA,KAAK,EAAE;AAACJ,MAAAA,KAAK,EAAEA,KAAK,GAAG,IAAhB;AAAsBC,MAAAA,MAAM,EAAEA,MAAM,GAAG,IAAvC;AAA6CC,MAAAA,QAAQ,EAAEA,QAAQ,GAAG;AAAlE,KAFX;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,OAAO,EAAEC,OAJb;AAAA,cAKKJ;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvBD;;KAAMN,M;AAyBNA,MAAM,CAACa,SAAP,GAAmB;AACfT,EAAAA,aAAa,EAAEL,SAAS,CAACe,MADV;AAEfP,EAAAA,KAAK,EAAER,SAAS,CAACgB,SAAV,CAAoB,CACvBhB,SAAS,CAACe,MADa,EAEvBf,SAAS,CAACiB,MAFa,CAApB,CAFQ;AAMfR,EAAAA,MAAM,EAAET,SAAS,CAACgB,SAAV,CAAoB,CACxBhB,SAAS,CAACe,MADc,EAExBf,SAAS,CAACiB,MAFc,CAApB,CANO;AAUfP,EAAAA,QAAQ,EAAEV,SAAS,CAACgB,SAAV,CAAoB,CAC1BhB,SAAS,CAACe,MADgB,EAE1Bf,SAAS,CAACiB,MAFgB,CAApB,CAVK;AAcfb,EAAAA,OAAO,EAAEJ,SAAS,CAACkB,MAdJ;AAefX,EAAAA,IAAI,EAAEP,SAAS,CAACgB,SAAV,CAAoB,CACtBhB,SAAS,CAACe,MADY,EAEtBf,SAAS,CAACkB,MAFY,CAApB,CAfS;AAmBfP,EAAAA,OAAO,EAAEX,SAAS,CAACmB,IAAV,CAAeC;AAnBT,CAAnB;AAsBA,eAAetB,WAAW,CAACC,MAAD,CAAX,CAAoBE,MAApB,CAAf","sourcesContent":["import React from 'react';\nimport injectSheet from \"react-jss\";\nimport styles from \"./ButtonStyles\";\nimport PropTypes from \"prop-types\";\n\nconst Button = (props) => {\n\n    const findAdditionalClass = () => {\n        const {classes, additionClass} = props;\n        for (let prop in classes) {\n            if (prop === additionClass) {\n                return classes[prop];\n            }\n        }\n        return false;\n    }\n    const {text, width, height, fontSize, onClick, classes} = props;\n    const addClass = findAdditionalClass();\n\n    return (\n        <button\n            className={`${classes.btn} ${addClass}`}\n            style={{width: width + 'px', height: height + 'px', fontSize: fontSize + 'px'}}\n            type=\"button\"\n            onClick={onClick}>\n            {text}\n        </button>\n    );\n}\n\nButton.propTypes = {\n    additionClass: PropTypes.string,\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    height: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    fontSize: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    classes: PropTypes.object,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    onClick: PropTypes.func.isRequired\n};\n\nexport default injectSheet(styles)(Button);"]},"metadata":{},"sourceType":"module"}